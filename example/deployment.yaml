apiVersion: v1
kind: Pod
metadata:
  name: sshfs-server
  labels:
    name: sshfs-server
spec:
  containers:
    - name: sshfs-server
      image: ghcr.io/robin-rpr/docker-sshfs:main
      env:
        - name: SSHFS_HOST
          value: "root@localhost:/"
        - name: SSHFS_OPTS
          value: "-p 222 -o IdentityFile=/config/ssh_key -o noatime -o reconnect"
      securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
      ports:
        - name: sshfs
          containerPort: 222
          protocol: TCP
      volumeMounts:
        - name: ssh-key-volume
          mountPath: "/config/ssh-key"
  volumes:
    - name: ssh-key-volume
      secret:
        secretName: my-ssh-key
        defaultMode: 256
    - name: content-volume
      target: 
---
kind: Service
apiVersion: v1
metadata:
  name: sshfs-server
spec:
  selector:
    name: sshfs-server
  ports:
    - protocol: TCP
      port: 222
      targetPort: 222
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-sshfs
  labels:
    name: data-sshfs
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi
  storageClassName: sshfs
  csi:
    driver: csi-driver-sshfs
    volumeHandle: data-id
    volumeAttributes:
      server: "localhost"
      port: "222"
      share: "/"
      privateKey: "sshfs-example/rsa_key"
      user: "root"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-sshfs
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: sshfs
  selector:
    matchLabels:
      name: data-sshfs
---
metadata:
  name: website
kind: Pod
apiVersion: v1
spec:
  volumes:
      - name: data-sshfs
        persistentVolumeClaim:
          claimName: data-sshfs
  containers:
    - name: website-container
      image: nginx
      volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: data-sshfs
      ports:
        - name: http-server
          containerPort: 80
          protocol: TCP
